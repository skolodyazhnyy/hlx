{"version":3,"file":"hlx-minicart.js","sourceRoot":"","sources":["../../src/hlx-minicart/hlx-minicart.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAE1D;;;;;;GAMG;AAEH,IAAa,kBAAkB,GAA/B,MAAa,kBAAmB,SAAQ,UAAU;IAAlD;;QA0BE;;WAEG;QAEH,UAAK,GAAG,CAAC,CAAC;IAiBZ,CAAC;IAfU,MAAM;QACb,OAAO,IAAI,CAAA,kBAAkB,IAAI,CAAC,QAAQ;;;;;yBAKrB,IAAI,CAAC,KAAK;;gBAEnB,CAAC;IACf,CAAC;IAEO,QAAQ;QACd,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC;IACvD,CAAC;CACF,CAAA;AA9CiB,yBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;GAuB1B,CAAA;AAMF;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;iDACf;AA9BC,kBAAkB;IAD9B,aAAa,CAAC,cAAc,CAAC;GACjB,kBAAkB,CA+C9B;SA/CY,kBAAkB","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('hlx-minicart')\nexport class HlxMinicartElement extends LitElement {\n  static override styles = css`\n    :host {\n      display: flex;\n      border: solid 1px #e0e0e0;\n    }\n    \n    button {\n      width: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 0;\n      margin: 1px;\n      background: none;\n      border: none;\n      outline: none;\n      cursor: pointer;\n      position: relative;\n    }\n    \n    button:active {\n      margin: 2px 0 0 2px;\n    }\n  `;\n\n  /**\n   * The number of times the button has been clicked.\n   */\n  @property({type: Number})\n  count = 4;\n\n  override render() {\n    return html`<button @click=${this._onClick}>\n          <slot name=\"icon\">\n            <hlx-shoppingcart-icon>Cart</hlx-shoppingcart-icon>\n          </slot>\n          <slot name=\"badge\">\n            <hlx-badge>${this.count}</hlx-badge>\n          </slot>\n      </button>`;\n  }\n\n  private _onClick() {\n    this.count++;\n    this.dispatchEvent(new CustomEvent('count-changed'));\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hlx-minicart': HlxMinicartElement;\n  }\n}\n"]}